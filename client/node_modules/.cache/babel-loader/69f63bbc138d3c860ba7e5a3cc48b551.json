{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Taetu\\\\week2Bootcamp\\\\homework\\\\Project-Three\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Taetu\\\\week2Bootcamp\\\\homework\\\\Project-Three\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Taetu\\\\week2Bootcamp\\\\homework\\\\Project-Three\\\\client\\\\src\\\\pages\\\\CreateGoal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/CreateHeader\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction CreateGoal() {\n  // Setting our component's initial state\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formObject = _useState4[0],\n        setFormObject = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(() => {\n    loadGoals();\n  }, []); // Loads all books and sets them to books\n\n  function loadGoals() {\n    API.getGoals().then(res => setGoals(res.data)).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteGoals(id) {\n    API.deleteGoals(id).then(res => loadGoals()).catch(err => console.log(err));\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.goal && formObject.date) {\n      API.saveGoal({\n        goal: formObject.goal,\n        date: formObject.date,\n        synopsis: formObject.synopsis\n      }).then(res => loadGoals()).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Create Your goal\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"goal\",\n    placeholder: \"goal (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"date\",\n    placeholder: \"date (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Submit Goal\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"My Goals List\")), goals.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, goals.map(goal => /*#__PURE__*/React.createElement(ListItem, {\n    key: goal._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/books/\" + goal._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, goal.goal, \" by \", goal.date)), /*#__PURE__*/React.createElement(DeleteBtn, {\n    onClick: () => deleteGoals(book._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default CreateGoal;","map":{"version":3,"sources":["C:/Users/Taetu/week2Bootcamp/homework/Project-Three/client/src/pages/CreateGoal.js"],"names":["React","useState","useEffect","Header","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","CreateGoal","goal","setGoal","formObject","setFormObject","loadGoals","getGoals","then","res","setGoals","data","catch","err","console","log","deleteGoals","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","date","saveGoal","synopsis","author","title","goals","length","map","_id","book"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/CreateHeader\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\"\r\n\r\nfunction CreateGoal(){\r\n     // Setting our component's initial state\r\n  const [goal, setGoal] = useState([])\r\n  const [formObject, setFormObject] = useState({})\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadGoals()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadGoals() {\r\n    API.getGoals()\r\n      .then(res => \r\n        setGoals(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteGoals(id) {\r\n    API.deleteGoals(id)\r\n      .then(res => loadGoals())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value})\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.goal && formObject.date) {\r\n      API.saveGoal({\r\n        goal: formObject.goal,\r\n        date: formObject.date,\r\n        synopsis: formObject.synopsis\r\n      })\r\n        .then(res => loadGoals())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-6\">\r\n          <Jumbotron>\r\n            <h1>Create Your goal</h1>\r\n          </Jumbotron>\r\n          <form>\r\n            <Input\r\n              onChange={handleInputChange}\r\n              name=\"goal\"\r\n              placeholder=\"goal (required)\"\r\n            />\r\n            <Input\r\n              onChange={handleInputChange}\r\n              name=\"date\"\r\n              placeholder=\"date (required)\"\r\n            />\r\n            <TextArea\r\n              onChange={handleInputChange}\r\n              name=\"synopsis\"\r\n              placeholder=\"Synopsis (Optional)\"\r\n            />\r\n            <FormBtn\r\n              disabled={!(formObject.author && formObject.title)}\r\n              onClick={handleFormSubmit}\r\n            >\r\n              Submit Goal\r\n            </FormBtn>\r\n          </form>\r\n        </Col>\r\n        <Col size=\"md-6 sm-12\">\r\n          <Jumbotron>\r\n            <h1>My Goals List</h1>\r\n          </Jumbotron>\r\n          {goals.length ? (\r\n            <List>\r\n              {goals.map(goal => (\r\n                <ListItem key={goal._id}>\r\n                  <Link to={\"/books/\" + goal._id}>\r\n                    <strong>\r\n                      {goal.goal} by {goal.date}\r\n                    </strong>\r\n                  </Link>\r\n                  <DeleteBtn onClick={() => deleteGoals(book._id)} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : (\r\n            <h3>No Results to Display</h3>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CreateGoal;"]},"metadata":{},"sourceType":"module"}